/*
Copyright (C) 2016 maxim

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/
/* 
    Created on : 14-okt-2016, 0:17:20
    Author     : maxim
*/

@font-face {
    font-family: LemonMilk;
    src: url(LemonMilk.otf);
}

body{
    background: rgba(46,30,28,0.1);
background: -moz-linear-gradient(left, rgba(46,30,28,0.1) 0%, rgba(23,15,14,0) 50%, rgba(0,0,0,0.1) 100%);
background: -webkit-gradient(left top, right top, color-stop(0%, rgba(46,30,28,0.1)), color-stop(50%, rgba(23,15,14,0)), color-stop(100%, rgba(0,0,0,0.1)));
background: -webkit-linear-gradient(left, rgba(46,30,28,0.1) 0%, rgba(23,15,14,0) 50%, rgba(0,0,0,0.1) 100%);
background: -o-linear-gradient(left, rgba(46,30,28,0.1) 0%, rgba(23,15,14,0) 50%, rgba(0,0,0,0.1) 100%);
background: -ms-linear-gradient(left, rgba(46,30,28,0.1) 0%, rgba(23,15,14,0) 50%, rgba(0,0,0,0.1) 100%);
background: linear-gradient(to right, rgba(46,30,28,0.1) 0%, rgba(23,15,14,0) 50%, rgba(0,0,0,0.1) 100%)!important;
filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#2e1e1c', endColorstr='#000000', GradientType=1 );
}

.slick-slide{
    height: 90vh;
}

.single-item{
    margin-left: 50px;
    margin-right: 50px;
    height:90vh;
}

question h1{
    font-family: LemonMilk, Arial, Helvetica,sans-serif;
    text-align: center;
    font-size: 600%;
    padding: 5%;
    vertical-align: middle;
    
}

#textinput{
    align-content: center;
}

.ideas{
    width:50%;
    padding:2%;
    float:left;
    height:90vh;
}

#yellowIdeas{
  border-left-style: dashed;
  border-left-width: 1px;

}

.title{
    font-family: LemonMilk, Arial, Helvetica,sans-serif;
    font-weight: bold;
    color: black;
   -webkit-text-stroke-width: 1px;
   -webkit-text-stroke-color: rgba(0,0,0,0.7);
}

#yellowIdeas h1{
   -webkit-text-fill-color: yellow; /* Will override color (regardless of order) */
}

#redIdeas h1{
   -webkit-text-fill-color: red; /* Will override color (regardless of order) */
}

input[type=text]:not(:focus){
    opacity: 0.2;
}

input[type=text]:not(:focus) + span>button{
    opacity:0.1;
}

*.subtle{
    opacity:0.1;
}

*.subtle:hover{
    opacity:1;
}

.fa-times{
    margin-left: 1%;
    color: red;
}

.fa-chevron-up {
    float: left;
    margin-right: 1%;
}
.fa-chevron-down{
    float: left;
    margin-right: 1%;
}

.badge-info {
  background-color: #3a87ad!important;
}

ul{
    max-height: 80%;
    overflow: auto;
}

li span {
    -webkit-user-select: text;
  -khtml-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
  user-select: text;
}

/* Drag and drop */

/**
 * For the correct positioning of the placeholder element, the dnd-list and
 * it's children must have position: relative
 */
ul[dnd-list],
ul[dnd-list] > li {
	position: relative;
}

/**
 * The dnd-list should always have a min-height,
 * otherwise you can't drop to it once it's empty
 */
ul[dnd-list] {
    min-height: 42px;
    padding-left: 0px;
}

/**
 * The dndDraggingSource class will be applied to
 * the source element of a drag operation. It makes
 * sense to hide it to give the user the feeling
 * that he's actually moving it.
 */
ul[dnd-list] .dndDraggingSource {
    display: none;
}

/**
 * An element with .dndPlaceholder class will be
 * added to the dnd-list while the user is dragging
 * over it.
 */
ul[dnd-list] .dndPlaceholder {
    display: block;
    background-color: #ddd;
    min-height: 42px;
}

/**
 * The dnd-lists's child elements currently MUST have
 * position: relative. Otherwise we can not determine
 * whether the mouse pointer is in the upper or lower
 * half of the element we are dragging over. In other
 * browsers we can use event.offsetY for this.
 */
ul[dnd-list] li {
    background-color: #fff;
    border: 1px solid #ddd;
    border-top-right-radius: 4px;
    border-top-left-radius: 4px;
    display: block;
    padding: 10px 15px;
    margin-bottom: -1px;
}

/**
 * Show selected elements in green
 */
ul[dnd-list] li.selected {
    background-color: #dff0d8;
    color: #3c763d;
}



/* Finale ranking */

#finalRanking h1{
    text-transform: uppercase;
    -webkit-text-fill-color: rgb(18, 179, 72); /* Will override color (regardless of order) */
    
}

.medal {
  max-height: 80%;
  overflow: auto;
  margin: 0;
  padding: 0;
  list-style-type: none;
}
.medal li {
  counter-increment: step-counter;
}
.medal li::before {
  content: counter(step-counter);
  margin-right: 20px;
  color: black;
  font-weight: bold;
  padding: 4px 8px;
  border-radius: 12px;
}


.medal li:nth-child(1)::before {
  background-color: gold; 
}

.medal li:nth-child(2)::before {
  background-color: silver; 
}

.medal li:nth-child(3)::before {
  background-color: #cd7f32; 
}
